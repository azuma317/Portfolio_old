{"version":3,"file":"component---src-templates-tags-blog-template-tsx-da0da53b57f283d1c253.js","mappings":"uJAwBA,IAhBMA,SAAwB,GAAoB,IAAD,YAARC,EAAQ,EAARA,KACvC,OAAO,mBAASC,IAAG,UAAED,EAAF,2BAAEA,EAAd,OACL,mBACE,gBAAME,MAAO,CAAEC,UAAf,QAAoCC,IAAI,UAAAJ,EAAA,oCAAxC,KACG,UAAAA,EAAA,qDAA2BA,EAA3B,2BAA2BA,EAA3B,OAHA,MAML,+BAAQA,EAAR,gCAAQA,EANH,cAOL,mBACEK,wBAAyB,CACvBC,QAAQ,UAAAN,EAAA,gDAAiCA,EAAjC,SATd,MADF,C,6FCSA,EARMO,SAAyB,GAAWC,ICNC,IDMDA,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IACzCC,GCIC,WAVMC,EAAAA,EAAAA,gBAAb,cAUO,0EAAP,GDFMC,EAAS,IAAMH,GAAAA,GAArB,GAEA,OAAO,aAAQI,eAAgB,CAAEC,KAA1B,MAAwCN,MAA/C,GALF,C,oFEsBA,UAjB0C,YAA6B,YAAlBO,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAC7D,EAA8BA,EAA9B,kBAAQC,EAAR,QACMT,GADN,cACc,UAAAQ,EAAA,0EAAd,IACME,GAAc,UAAAF,EAAA,gFAApB,GAEA,OACE,aAAQD,SAAUA,IAChB,aAAKP,MAAL,EAAmBU,YAAaA,KAChC,aAAOV,MAAOA,KACd,kBAHF,GAIGS,EAAA,KAAU,kBAAGE,EAAH,cACT,aAAMlB,IAAG,UAAEkB,EAAF,2BAAEA,EAAX,KAA8BnB,KAAMmB,GAN1C,IALF,C","sources":["webpack://gatsby-starter-blog/./src/components/post.tsx","webpack://gatsby-starter-blog/./src/components/title.tsx","webpack://gatsby-starter-blog/./src/hooks/useTitle.ts","webpack://gatsby-starter-blog/./src/templates/tagsBlogTemplate.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport type { MarkdownRemark } from '../../types/graphql-types'\n\ntype Props = {\n  post: Pick<MarkdownRemark, 'fields' | 'frontmatter' | 'excerpt'>\n}\n\nconst Post: React.FC<Props> = function({ post }) {\n  return <article key={post.fields?.slug}>\n    <h3>\n      <Link style={{ boxShadow: 'none' }} to={post.fields?.slug || ''}>\n        {post.frontmatter?.title || post.fields?.slug || ''}\n      </Link>\n    </h3>\n    <small>{post.frontmatter?.createdDate}</small>\n    <section\n      dangerouslySetInnerHTML={{\n        __html: post.frontmatter?.description || post.excerpt || '',\n      }}\n    />\n  </article>\n}\n\nexport default Post\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport useTitle from '../hooks/useTitle'\n\ntype Props = {\n  title?: string\n  tag?: string\n}\n\nconst Title: React.FC<Props> = function({ title, tag }) {\n  const blogTitle = useTitle()\n\n  const titleText = `${tag || title || blogTitle}`\n\n  return <Helmet htmlAttributes={{ lang: 'ja' }} title={titleText} />\n}\n\nexport default Title\n","import { useStaticQuery, graphql } from 'gatsby'\nimport { LayoutQueryQuery } from '../../types/graphql-types'\n\nexport default function useTitle(): string {\n  const data = useStaticQuery<LayoutQueryQuery>(graphql`\n    query LayoutQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data.site?.siteMetadata?.title || ''\n}\n","import React from 'react'\nimport 'twin.macro'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/title'\nimport Post from '../components/post'\nimport { BlogByTagQuery } from '../../types/graphql-types'\n\ntype Props = {\n  location: Location\n  data: BlogByTagQuery\n}\n\nconst TagsBlogTemplate: React.FC<Props> = function({ location, data }) {\n  const { edges, totalCount } = data.allMarkdownRemark\n  const title = data.site?.siteMetadata?.title || ''\n  const description = data.site?.siteMetadata?.description || ''\n\n  return (\n    <Layout location={location}>\n      <SEO title={title} description={description} />\n      <Title title={title} />\n      <h1>{title}</h1>\n      {edges.map(({ node }) => (\n        <Post key={node.fields?.slug} post={node} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default TagsBlogTemplate\n\nexport const pageQuery = graphql`\n  query BlogByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            createdDate(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Post","post","key","style","boxShadow","to","dangerouslySetInnerHTML","__html","Title","title","tag","blogTitle","useStaticQuery","titleText","htmlAttributes","lang","location","data","edges","description","node"],"sourceRoot":""}
{"version":3,"file":"component---src-templates-blog-list-template-tsx-4dfb6920cde383c34f6e.js","mappings":"8JAwBA,IAhB8B,YAAoB,IAAD,YAARA,EAAQ,EAARA,KACvC,OAAO,mBAASC,IAAG,UAAED,EAAKE,cAAP,aAAE,EAAaC,OAChC,mBACE,QAAC,EAAAC,KAAD,CAAMC,MAAO,CAAEC,UAAW,QAAUC,IAAI,UAAAP,EAAKE,cAAL,eAAaC,OAAQ,KAC1D,UAAAH,EAAKQ,mBAAL,eAAkBC,SAAlB,UAA2BT,EAAKE,cAAhC,aAA2B,EAAaC,OAAQ,MAGrD,+BAAQH,EAAKQ,mBAAb,aAAQ,EAAkBE,cAC1B,mBACEC,wBAAyB,CACvBC,QAAQ,UAAAZ,EAAKQ,mBAAL,eAAkBK,cAAeb,EAAKc,SAAW,S,mGCDjE,EAR+B,YAA0B,ICNd,IDMDL,EAAc,EAAdA,MAAOM,EAAO,EAAPA,IACzCC,GCIC,WAVMC,EAAAA,EAAAA,gBAAc,cAUfC,YAAL,mBAAWC,oBAAX,eAAyBV,QAAS,GDFnCW,EAAS,IAAML,GAAON,GAASO,GAErC,OAAO,QAACK,EAAA,EAAD,CAAQC,eAAgB,CAAEC,KAAM,MAAQd,MAAOW,M,yFEkBxD,UAnB0C,YAA8B,IAAD,YAAlBI,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACvDC,EAAQD,EAAKE,kBAAkBC,MAC/B5B,EAAOyB,EAAKI,eACZpB,GAAQT,MAAAA,GAAA,UAAAA,EAAMQ,mBAAN,eAAmBC,SAAnB,UAA4BgB,EAAKP,YAAjC,iBAA4B,EAAWC,oBAAvC,aAA4B,EAAyBV,QAAS,GACtEI,GACJb,MAAAA,GAAA,UAAAA,EAAMQ,mBAAN,eAAmBK,eAAnB,UAAkCY,EAAKP,YAAvC,iBAAkC,EAAWC,oBAA7C,aAAkC,EAAyBN,cAAe,GAE5E,OACE,QAAC,IAAD,CAAQW,SAAUA,IAChB,QAAC,IAAD,CAAKf,MAAOA,EAAOI,YAAaA,KAChC,QAAC,IAAD,CAAOJ,MAAOA,KACd,kBAAKA,GACJiB,EAAMI,KAAI,kBAAGC,EAAH,EAAGA,KAAH,OACT,QAAC,IAAD,CAAM9B,IAAG,UAAE8B,EAAK7B,cAAP,aAAE,EAAaC,KAAMH,KAAM+B","sources":["webpack://gatsby-starter-blog/./src/components/post.tsx","webpack://gatsby-starter-blog/./src/components/title.tsx","webpack://gatsby-starter-blog/./src/hooks/useTitle.ts","webpack://gatsby-starter-blog/./src/templates/blogListTemplate.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport type { MarkdownRemark } from '../../types/graphql-types'\n\ntype Props = {\n  post: Pick<MarkdownRemark, 'fields' | 'frontmatter' | 'excerpt'>\n}\n\nconst Post: React.FC<Props> = function({ post }) {\n  return <article key={post.fields?.slug}>\n    <h3>\n      <Link style={{ boxShadow: 'none' }} to={post.fields?.slug || ''}>\n        {post.frontmatter?.title || post.fields?.slug || ''}\n      </Link>\n    </h3>\n    <small>{post.frontmatter?.createdDate}</small>\n    <section\n      dangerouslySetInnerHTML={{\n        __html: post.frontmatter?.description || post.excerpt || '',\n      }}\n    />\n  </article>\n}\n\nexport default Post\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport useTitle from '../hooks/useTitle'\n\ntype Props = {\n  title?: string\n  tag?: string\n}\n\nconst Title: React.FC<Props> = function({ title, tag }) {\n  const blogTitle = useTitle()\n\n  const titleText = `${tag || title || blogTitle}`\n\n  return <Helmet htmlAttributes={{ lang: 'ja' }} title={titleText} />\n}\n\nexport default Title\n","import { useStaticQuery, graphql } from 'gatsby'\nimport { LayoutQueryQuery } from '../../types/graphql-types'\n\nexport default function useTitle(): string {\n  const data = useStaticQuery<LayoutQueryQuery>(graphql`\n    query LayoutQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data.site?.siteMetadata?.title || ''\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/title'\nimport { BlogListQuery } from '../../types/graphql-types'\nimport Post from '../components/post'\n\ntype Props = {\n  location: Location\n  data: BlogListQuery\n}\n\nconst BlogListTemplate: React.FC<Props> = function({ location, data }) {\n  const posts = data.allMarkdownRemark.edges\n  const post = data.markdownRemark\n  const title = post?.frontmatter?.title || data.site?.siteMetadata?.title || ''\n  const description =\n    post?.frontmatter?.description || data.site?.siteMetadata?.description || ''\n\n  return (\n    <Layout location={location}>\n      <SEO title={title} description={description} />\n      <Title title={title} />\n      <h1>{title}</h1>\n      {posts.map(({ node }) => (\n        <Post key={node.fields?.slug} post={node} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default BlogListTemplate\n\nexport const pageQuery = graphql`\n  query BlogList($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        createdDate(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___createdDate], order: DESC }\n      filter: { frontmatter: { group: { eq: \"Blog\" } } }\n      limit: 10\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            createdDate(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["post","key","fields","slug","Link","style","boxShadow","to","frontmatter","title","createdDate","dangerouslySetInnerHTML","__html","description","excerpt","tag","blogTitle","useStaticQuery","site","siteMetadata","titleText","Helmet","htmlAttributes","lang","location","data","posts","allMarkdownRemark","edges","markdownRemark","map","node"],"sourceRoot":""}
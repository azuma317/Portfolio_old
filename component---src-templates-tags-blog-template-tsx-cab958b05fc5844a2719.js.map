{"version":3,"file":"component---src-templates-tags-blog-template-tsx-cab958b05fc5844a2719.js","mappings":"8JAwBA,IAhB8B,YAAoB,IAAD,YAARA,EAAQ,EAARA,KACvC,OAAO,mBAASC,IAAG,UAAED,EAAKE,cAAP,aAAE,EAAaC,OAChC,mBACE,QAAC,EAAAC,KAAD,CAAMC,MAAO,CAAEC,UAAW,QAAUC,IAAI,UAAAP,EAAKE,cAAL,eAAaC,OAAQ,KAC1D,UAAAH,EAAKQ,mBAAL,eAAkBC,SAAlB,UAA2BT,EAAKE,cAAhC,aAA2B,EAAaC,OAAQ,MAGrD,+BAAQH,EAAKQ,mBAAb,aAAQ,EAAkBE,cAC1B,mBACEC,wBAAyB,CACvBC,QAAQ,UAAAZ,EAAKQ,mBAAL,eAAkBK,cAAeb,EAAKc,SAAW,MAIhE,C,qGCLD,EAR+B,YAA0B,ICNd,IDMDL,EAAc,EAAdA,MAAOM,EAAO,EAAPA,IACzCC,GCIC,WAVMC,EAAAA,EAAAA,gBAAc,cAUfC,YAAL,mBAAWC,oBAAX,eAAyBV,QAAS,GDFnCW,EAAS,IAAML,GAAON,GAASO,GAErC,OAAO,QAACK,EAAA,EAAD,CAAQC,eAAgB,CAAEC,KAAM,MAAQd,MAAOW,GACvD,C,2FEgBD,UAjB0C,YAA8B,IAAD,QAAlBI,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAC7D,EAA8BA,EAAKC,kBAA3BC,EAAR,EAAQA,MACFlB,GADN,EAAemB,YACD,UAAAH,EAAKP,YAAL,mBAAWC,oBAAX,eAAyBV,QAAS,IAC1CI,GAAc,UAAAY,EAAKP,YAAL,mBAAWC,oBAAX,eAAyBN,cAAe,GAE5D,OACE,QAAC,IAAD,CAAQW,SAAUA,IAChB,QAAC,IAAD,CAAKf,MAAOA,EAAOI,YAAaA,KAChC,QAAC,IAAD,CAAOJ,MAAOA,KACd,kBAAKA,GACJkB,EAAME,KAAI,kBAAGC,EAAH,EAAGA,KAAH,OACT,QAAC,IAAD,CAAM7B,IAAG,UAAE6B,EAAK5B,cAAP,aAAE,EAAaC,KAAMH,KAAM8B,GAD3B,IAKhB,C","sources":["webpack://gatsby-starter-blog/./src/components/post.tsx","webpack://gatsby-starter-blog/./src/components/title.tsx","webpack://gatsby-starter-blog/./src/hooks/useTitle.ts","webpack://gatsby-starter-blog/./src/templates/tagsBlogTemplate.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport type { MarkdownRemark } from '../../types/graphql-types'\n\ntype Props = {\n  post: Pick<MarkdownRemark, 'fields' | 'frontmatter' | 'excerpt'>\n}\n\nconst Post: React.FC<Props> = function({ post }) {\n  return <article key={post.fields?.slug}>\n    <h3>\n      <Link style={{ boxShadow: 'none' }} to={post.fields?.slug || ''}>\n        {post.frontmatter?.title || post.fields?.slug || ''}\n      </Link>\n    </h3>\n    <small>{post.frontmatter?.createdDate}</small>\n    <section\n      dangerouslySetInnerHTML={{\n        __html: post.frontmatter?.description || post.excerpt || '',\n      }}\n    />\n  </article>\n}\n\nexport default Post\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport useTitle from '../hooks/useTitle'\n\ntype Props = {\n  title?: string\n  tag?: string\n}\n\nconst Title: React.FC<Props> = function({ title, tag }) {\n  const blogTitle = useTitle()\n\n  const titleText = `${tag || title || blogTitle}`\n\n  return <Helmet htmlAttributes={{ lang: 'ja' }} title={titleText} />\n}\n\nexport default Title\n","import { useStaticQuery, graphql } from 'gatsby'\nimport { LayoutQueryQuery } from '../../types/graphql-types'\n\nexport default function useTitle(): string {\n  const data = useStaticQuery<LayoutQueryQuery>(graphql`\n    query LayoutQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data.site?.siteMetadata?.title || ''\n}\n","import React from 'react'\nimport 'twin.macro'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/title'\nimport Post from '../components/post'\nimport { BlogByTagQuery } from '../../types/graphql-types'\n\ntype Props = {\n  location: Location\n  data: BlogByTagQuery\n}\n\nconst TagsBlogTemplate: React.FC<Props> = function({ location, data }) {\n  const { edges, totalCount } = data.allMarkdownRemark\n  const title = data.site?.siteMetadata?.title || ''\n  const description = data.site?.siteMetadata?.description || ''\n\n  return (\n    <Layout location={location}>\n      <SEO title={title} description={description} />\n      <Title title={title} />\n      <h1>{title}</h1>\n      {edges.map(({ node }) => (\n        <Post key={node.fields?.slug} post={node} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default TagsBlogTemplate\n\nexport const pageQuery = graphql`\n  query BlogByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            createdDate(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["post","key","fields","slug","Link","style","boxShadow","to","frontmatter","title","createdDate","dangerouslySetInnerHTML","__html","description","excerpt","tag","blogTitle","useStaticQuery","site","siteMetadata","titleText","Helmet","htmlAttributes","lang","location","data","allMarkdownRemark","edges","totalCount","map","node"],"sourceRoot":""}
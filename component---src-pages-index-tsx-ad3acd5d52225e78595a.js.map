{"version":3,"sources":["webpack:///./src/components/title.tsx","webpack:///./src/hooks/useTitle.ts","webpack:///./src/components/post.tsx","webpack:///./src/pages/index.tsx"],"names":["Title","postTitle","titleText","tag","site","siteMetadata","title","Helmet","htmlAttributes","lang","Post","post","key","fields","slug","style","marginBottom","rhythm","boxShadow","to","frontmatter","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery","BlogIndex","location","posts","data","allMarkdownRemark","edges","map","node"],"mappings":"8TAiBeA,EARgB,SAAC,GAAuB,ICNZ,IDMTC,EAAqB,EAArBA,UAG1BC,EAAY,IAHmC,EAAVC,KAGfF,GAAa,MCElC,UAVM,OAUDG,YAAL,mBAAWC,oBAAX,eAAyBC,QAAS,IDAzC,OAAO,YAACC,EAAA,OAAD,CAAQC,eAAgB,CAAEC,KAAM,MAAQH,MAAOJ,K,gDEmBzCQ,EAxBe,SAAC,GAAa,gBAAXC,EAAW,EAAXA,KAC/B,OACE,uBAASC,IAAG,UAAED,EAAKE,cAAP,aAAE,EAAaC,MACzB,kBACEC,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,YAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,IAAI,UAAAR,EAAKE,cAAL,eAAaC,OAAQ,KAC1D,UAAAH,EAAKS,mBAAL,eAAkBd,SAAlB,UAA2BK,EAAKE,cAAhC,aAA2B,EAAaC,OAAQ,KAGrD,mCAAQH,EAAKS,mBAAb,aAAQ,EAAkBC,MAC1B,2BACE,iBACEC,wBAAyB,CACvBC,QAAQ,UAAAZ,EAAKS,mBAAL,eAAkBI,cAAeb,EAAKc,SAAW,SCSxDC,GAFEC,UAhBoB,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,SAC9BC,EADmD,EAAXC,KAC3BC,kBAAkBC,MAErC,OACE,YAAC,IAAD,CAAQJ,SAAUA,GAChB,YAAC,IAAD,MACA,YAAC,EAAD,MACA,YAAC,IAAD,MACA,YAAC,IAAD,CAAKA,SAAUA,IACdC,EAAMI,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACZ,OAAO,YAAC,EAAD,CAAMvB,KAAMuB,SAQF","file":"component---src-pages-index-tsx-ad3acd5d52225e78595a.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport useTitle from '../hooks/useTitle'\n\ntype Props = {\n  postTitle?: string\n  tag?: string\n}\n\nconst Title: React.FC<Props> = ({ postTitle, tag }) => {\n  const title = useTitle()\n\n  const titleText = `${tag || postTitle || ''}${title}`\n\n  return <Helmet htmlAttributes={{ lang: 'ja' }} title={titleText} />\n}\n\nexport default Title\n","import { useStaticQuery, graphql } from 'gatsby'\nimport { LayoutQueryQuery } from '../../types/graphql-types'\n\nexport default function useTitle(): string {\n  const data = useStaticQuery<LayoutQueryQuery>(graphql`\n    query LayoutQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data.site?.siteMetadata?.title || ''\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport type { MarkdownRemark } from '../../types/graphql-types'\nimport { rhythm } from '../utils/typography'\n\ntype Props = {\n  post: Pick<MarkdownRemark, 'fields' | 'frontmatter' | 'excerpt'>\n}\n\nconst Post: React.FC<Props> = ({ post }) => {\n  return (\n    <article key={post.fields?.slug}>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        <Link style={{ boxShadow: `none` }} to={post.fields?.slug || ''}>\n          {post.frontmatter?.title || post.fields?.slug || ''}\n        </Link>\n      </h3>\n      <small>{post.frontmatter?.date}</small>\n      <section>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: post.frontmatter?.description || post.excerpt || '',\n          }}\n        />\n      </section>\n    </article>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport type { WindowLocation } from '@reach/router'\nimport type { IndexPageQuery } from '../../types/graphql-types'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/title'\nimport GlobalStyle from '../styles/globalStyle'\nimport Bio from '../components/bio'\nimport Post from '../components/post'\n\ntype Props = {\n  location: WindowLocation\n  data: IndexPageQuery\n}\n\nconst BlogIndex: React.FC<Props> = ({ location, data }) => {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location}>\n      <SEO />\n      <Title />\n      <GlobalStyle />\n      <Bio location={location} />\n      {posts.map(({ node }) => {\n        return <Post post={node} />\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { group: { eq: \"blog\" } } }\n      limit: 10\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
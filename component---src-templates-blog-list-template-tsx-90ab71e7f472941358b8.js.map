{"version":3,"file":"component---src-templates-blog-list-template-tsx-90ab71e7f472941358b8.js","mappings":"uJAwBA,IAhBMA,SAAwB,GAAoB,IAAD,YAARC,EAAQ,EAARA,KACvC,OAAO,mBAASC,IAAG,UAAED,EAAF,2BAAEA,EAAd,OACL,mBACE,gBAAME,MAAO,CAAEC,UAAf,QAAoCC,IAAI,UAAAJ,EAAA,oCAAxC,KACG,UAAAA,EAAA,qDAA2BA,EAA3B,2BAA2BA,EAA3B,OAHA,MAML,+BAAQA,EAAR,gCAAQA,EANH,cAOL,mBACEK,wBAAyB,CACvBC,QAAQ,UAAAN,EAAA,gDAAiCA,EAAjC,SATd,MADF,C,6FCSA,EARMO,SAAyB,GAAWC,ICNC,IDMDA,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IACzCC,GCIC,WAVMC,EAAAA,EAAAA,gBAAb,cAUO,0EAAP,GDFMC,EAAS,IAAMH,GAAAA,GAArB,GAEA,OAAO,aAAQI,eAAgB,CAAEC,KAA1B,MAAwCN,MAA/C,GALF,C,oFEuBA,UAnB0C,YAA6B,gBAAlBO,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACvDC,EAAQD,EAAAA,kBAAd,MACMhB,EAAOgB,EAAb,eACMR,GAAQR,SAAA,UAAAA,EAAA,qDAA4BgB,EAA5B,6BAA4BA,EAA5B,iCAA4BA,EAA5B,QAAd,GACME,GACJlB,SAAA,UAAAA,EAAA,2DAAkCgB,EAAlC,6BAAkCA,EAAlC,iCAAkCA,EAAlC,cADF,GAGA,OACE,aAAQD,SAAUA,IAChB,aAAKP,MAAL,EAAmBU,YAAaA,KAChC,aAAOV,MAAOA,KACd,kBAHF,GAIGS,EAAA,KAAU,kBAAGE,EAAH,cACT,aAAMlB,IAAG,UAAEkB,EAAF,2BAAEA,EAAX,KAA8BnB,KAAMmB,GAN1C,IAPF,C","sources":["webpack://gatsby-starter-blog/./src/components/post.tsx","webpack://gatsby-starter-blog/./src/components/title.tsx","webpack://gatsby-starter-blog/./src/hooks/useTitle.ts","webpack://gatsby-starter-blog/./src/templates/blogListTemplate.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport type { MarkdownRemark } from '../../types/graphql-types'\n\ntype Props = {\n  post: Pick<MarkdownRemark, 'fields' | 'frontmatter' | 'excerpt'>\n}\n\nconst Post: React.FC<Props> = function({ post }) {\n  return <article key={post.fields?.slug}>\n    <h3>\n      <Link style={{ boxShadow: 'none' }} to={post.fields?.slug || ''}>\n        {post.frontmatter?.title || post.fields?.slug || ''}\n      </Link>\n    </h3>\n    <small>{post.frontmatter?.createdDate}</small>\n    <section\n      dangerouslySetInnerHTML={{\n        __html: post.frontmatter?.description || post.excerpt || '',\n      }}\n    />\n  </article>\n}\n\nexport default Post\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport useTitle from '../hooks/useTitle'\n\ntype Props = {\n  title?: string\n  tag?: string\n}\n\nconst Title: React.FC<Props> = function({ title, tag }) {\n  const blogTitle = useTitle()\n\n  const titleText = `${tag || title || blogTitle}`\n\n  return <Helmet htmlAttributes={{ lang: 'ja' }} title={titleText} />\n}\n\nexport default Title\n","import { useStaticQuery, graphql } from 'gatsby'\nimport { LayoutQueryQuery } from '../../types/graphql-types'\n\nexport default function useTitle(): string {\n  const data = useStaticQuery<LayoutQueryQuery>(graphql`\n    query LayoutQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data.site?.siteMetadata?.title || ''\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/title'\nimport { BlogListQuery } from '../../types/graphql-types'\nimport Post from '../components/post'\n\ntype Props = {\n  location: Location\n  data: BlogListQuery\n}\n\nconst BlogListTemplate: React.FC<Props> = function({ location, data }) {\n  const posts = data.allMarkdownRemark.edges\n  const post = data.markdownRemark\n  const title = post?.frontmatter?.title || data.site?.siteMetadata?.title || ''\n  const description =\n    post?.frontmatter?.description || data.site?.siteMetadata?.description || ''\n\n  return (\n    <Layout location={location}>\n      <SEO title={title} description={description} />\n      <Title title={title} />\n      <h1>{title}</h1>\n      {posts.map(({ node }) => (\n        <Post key={node.fields?.slug} post={node} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default BlogListTemplate\n\nexport const pageQuery = graphql`\n  query BlogList($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        createdDate(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___createdDate], order: DESC }\n      filter: { frontmatter: { group: { eq: \"Blog\" } } }\n      limit: 10\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            createdDate(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Post","post","key","style","boxShadow","to","dangerouslySetInnerHTML","__html","Title","title","tag","blogTitle","useStaticQuery","titleText","htmlAttributes","lang","location","data","posts","description","node"],"sourceRoot":""}